# -*- coding: utf-8 -*-
"""detection-tracking-inference.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/12qLB-Fqg8HzjrehT_PpepSBoS9H8W2dt
"""

!pip install -r  -q requirements.txt

!pip install -q "ultralytics<=8.3.40"

!pip install -q "supervision>=0.20.0"

!gdown -O "/content/data/traffic_analysis.pt" "https://drive.google.com/uc?id=1y-IfToCjRXa3ZdC1JpnKRopC7mcQW-5z"

!gdown --fuzzy "/content/data/0212.mp4 " "https://drive.google.com/file/d/1jq55z815k5U2GfTZlxgme4kO00aPBAGt/view?usp=sharing"

!python ultralytics_example.py     --source_weights_path /content/data/traffic_analysis.pt   --source_video_path /content/data/0212.mp4     --confidence_threshold 0.3     --iou_threshold 0.5     --target_video_path /content/data/traffic_analysis_result.mp4

import cv2
import os

# Path to the video
video_path = "/content/data/traffic_analysis_result.mp4"

# Create a directory to save frames
output_folder = "/content/frames"
os.makedirs(output_folder, exist_ok=True)

# Open the video file
cap = cv2.VideoCapture(video_path)

frame_count = 0

while cap.isOpened():
    ret, frame = cap.read()
    if not ret:
        break  # Exit the loop if video ends

    frame_filename = os.path.join(output_folder, f"frame_{frame_count:04d}.jpg")
    cv2.imwrite(frame_filename, frame)  # Save frame
    frame_count += 1

cap.release()
print(f"Extracted {frame_count} frames and saved in {output_folder}")

import IPython.display as display
from PIL import Image

# Show a few extracted frames
frame_files = sorted(os.listdir(output_folder))[:5]  # Show first 5 frames
for frame_file in frame_files:
    img = Image.open(os.path.join(output_folder, frame_file))
    display.display(img)

from google.colab import drive
drive.mount('/content/drive')

!mkdir -p "/content/drive/My Drive/cen300"
!cp "/content/data/traffic_analysis_result.mp4" "/content/drive/My Drive/cen300/"

